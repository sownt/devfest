services:
  postgres:
    image: postgres
    container_name: devfest_db
    restart: always
    env_file: .env
    shm_size: 128mb
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pg_data:/var/lib/postgresql/data
    ports:
      - ${EXPOSE_DATABASE}:5432
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 1s
      timeout: 5s
      retries: 10
  
  api:
    image: asia-southeast1-docker.pkg.dev/devfest-438523/sownt/devfest_api:latest
    container_name: devfest_api
    restart: always
    env_file: .env
    ports:
      - ${EXPOSE_API}:${SERVICE_PORT}
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - .env:/app/.env
    environment:
      - DB_HOST=postgres
      - DB_USER=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - DB_NAME=${POSTGRES_DB}
      - DB_PORT=${EXPOSE_DATABASE}
      - SERVICE_PORT=${SERVICE_PORT}
      - GO_ENV=production

  web:
    image: asia-southeast1-docker.pkg.dev/devfest-438523/sownt/devfest_web:latest
    container_name: devfest_web
    restart: always
    env_file: .env
    ports:
      - ${EXPOSE_APP}:3000
    environment:
      NODE_ENV: production
    command: npm start

volumes:
  pg_data: