services:
  db:
    profiles:
      - dev
      - prod
    image: mysql
    container_name: devfest_db
    restart: always
    env_file: .env
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - ${EXPOSE_DATABASE}:3306
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      timeout: 10s
      retries: 10

  dbms:
    profiles:
      - dev
      - prod
    image: phpmyadmin
    container_name: devfest_dbms
    restart: always
    environment:
      PMA_HOST: db
      UPLOAD_LIMIT: 128MB
    ports:
      - ${EXPOSE_PMA}:80
    depends_on:
      - db

  api:
    profiles:
      - dev
      - prod
    build:
      context: .
      target: api
    container_name: api
    restart: always
    env_file: .env
    volumes:
      - ${AWS_CREDENTIAL}:/root/.aws
      - ./api/templates:/app/templates
      - .env:/app/.env
    ports:
      - ${EXPOSE_API}:8080
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DB_HOST=db
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - SERVICE_PORT=8080
      - GO_ENV=production

  fastapi:
    profiles:
      - wip
    build: ./fastapi
    restart: always
    command: uvicorn main:app --reload --workers 1 --host 0.0.0.0 --port 8004
    volumes:
      - ./fastapi/:/opt/projects/app/
    ports:
      - 8004:8004
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "sh", "-c", "curl -s -f http://localhost:8004/v1/health/ping || exit 1"]
      interval: 60s
      timeout: 3s
      retries: 3
    depends_on:
      db:
        condition: service_healthy

  app-dev:
    profiles:
      - dev
    container_name: app
    build:
      context: .
      target: app-dev
    volumes:
      - .:/app
      - /app/node_modules
    ports:
      - ${EXPOSE_APP}:3000
    environment:
      NODE_ENV: development
    command: npm run dev

  app-prod:
    profiles:
      - prod
    container_name: app
    build:
      context: .
      target: app-prod
    ports:
      - ${EXPOSE_APP}:3000
    environment:
      NODE_ENV: production
    command: npm start

volumes:
  mysql_data: